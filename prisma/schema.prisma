// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Users {
    id                      Int              @id @default(autoincrement()) @map(name: "id")
    email                   String
    firstname               String
    lastname                String
    password                String
    initial_amount          Decimal          @default(0)
    cash                    Decimal          @default(0)
    current_portfolio_value Decimal          @default(0)
    watchlists              Watchlists[]
    trades                  Trades[]
    portfolio               Portfolio[]
    portfolio_value         PortfolioValue[]
}

model Watchlists {
    id       Int    @id @default(autoincrement()) @map(name: "id")
    user_id  Int
    stock_id Int
    users    Users  @relation(fields: [user_id], references: [id])
    stocks   Stocks @relation(fields: [stock_id], references: [id])
}

model Stocks {
    id            Int          @id @default(autoincrement()) @map(name: "id")
    symbol        String
    name          String
    current_price Decimal
    watchlists    Watchlists[]
    trades        Trades[]
    portfolio     Portfolio[]
}

model Trades {
    id         Int      @id @default(autoincrement()) @map(name: "id")
    user_id    Int
    stock_id   Int
    trade_type String
    shares     Int
    price      Decimal
    timestamp  DateTime 
    users      Users    @relation(fields: [user_id], references: [id])
    stocks     Stocks   @relation(fields: [stock_id], references: [id])
}

model Portfolio {
    id            Int     @id @default(autoincrement()) @map(name: "id")
    user_id       Int
    stock_id      Int
    shares        Int
    average_price Decimal
    total_equity  Decimal
    gain          Decimal
    users         Users   @relation(fields: [user_id], references: [id])
    stocks        Stocks  @relation(fields: [stock_id], references: [id])
}

model PortfolioValue {
    id        Int      @id @default(autoincrement()) @map(name: "id")
    user_id   Int
    value     Decimal
    timestamp DateTime 
    users     Users    @relation(fields: [user_id], references: [id])
}
